using System;
using System.Collections.Generic;
using IKVM.Reflection;

using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Sre.Macros;

namespace Nemerle.Compiler.Ikvm
{
  public sealed class AssemblyCustomAttributes : CustomAttributes
  {
    public this([NotNull] assembly : Assembly)
    {
      base(CustomAttributeData.GetCustomAttributes(assembly));
      AssemblyConfigurationAttributes = [];
      InternalsVisibleToAttributes    = [];
      foreach(attr in Data) attribute match(attr)
      {
        | System.Reflection.AssemblyConfigurationAttribute(configuration : string) =>
          AssemblyConfigurationAttributes ::= configuration

        | System.Runtime.CompilerServices.InternalsVisibleToAttribute(assemblyName : string) =>
          InternalsVisibleToAttributes ::= assemblyName
      }
    }

    public AssemblyConfigurationAttributes : list[string] { get }
    
    public InternalsVisibleToAttributes : list[string] { get }
  }
}