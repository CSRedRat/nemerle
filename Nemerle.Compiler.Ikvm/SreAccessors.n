using Nemerle.Compiler.Typedtree;

namespace Nemerle.Compiler.Sre
{
  internal module SreAccessors
  {
    public Sre(this x : AttributeCompilerClass) : SreAttributeCompilerClass
    {
      x :> SreAttributeCompilerClass
    }

    public Sre(this x : TypesManager) : SreTypesManager
    {
      x :> SreTypesManager
    }

    public Sre(this x : ExternalType) : SreExternalType
    {
      x :> SreExternalType
    }

    public SreMember(this x : IMember) : ISreMember
    {
      x :> ISreMember
    }

    public SreMember(this x : IField) : ISreField
    {
      x :> ISreField
    }

    public SreMember(this x : IMethod) : ISreMethod
    {
      x :> ISreMethod
    }

    public SreBuilder(this x : TypeBuilder) : SreTypeBuilder
    {
      x :> SreTypeBuilder
    }

    public SreBuilder(this x : MemberBuilder) : ISreMemberBuilder
    {
      x :> ISreMemberBuilder
    }

    public SreBuilder(this x : MethodBuilder) : SreMethodBuilder
    {
      x :> SreMethodBuilder
    }

    public Sre(this x : LocalValue) : SreLocalValue
    {
      x :> SreLocalValue
    }

    public Sre(this x : TParameter) : SreTParameter
    {
      x :> SreTParameter
    }

    public Sre(this x : StaticTypeVar) : SreStaticTypeVar
    {
      x :> SreStaticTypeVar
    }
  }
}