using System;
using System.Collections.Generic;
using System.Reflection;

using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Reflection.Macros;

namespace Nemerle.Compiler.Sre
{
  public class MemberCustomAttributes : CustomAttributes
  {
    protected this(data : IList[CustomAttributeData])
    {
      base(data)
    }

    public this([NotNull] memberInfo : System.Reflection.MemberInfo)
    {
      base(CustomAttributeData.GetCustomAttributes(memberInfo));
      ObsoleteAttributes    = [];
      foreach(attr in Data) attribute match(attr)
      {
        | System.ObsoleteAttribute() => // ctor with no arguments
          ObsoleteAttributes ::= (null, false)

        | System.ObsoleteAttribute(message : string) =>
          ObsoleteAttributes ::= (message, false)

        | System.ObsoleteAttribute(message : string, isError : bool) =>
          ObsoleteAttributes ::= (message, isError)
      }
    }

    public ObsoleteAttributes : list[string * bool] { get; protected set; }
  }
}