using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Extensions;

using System;
using System.Collections.Generic;
using System.Linq;
using System.IO;

using Github.Net.Model;

namespace Github.Net.Api
{
  /// <summary>
  /// Description of Downloads.
  /// </summary>
  public class Downloads
  {
    _githubApi : GithubApiv3;
    
    internal this (githubApi : GithubApiv3)
    {
      _githubApi = githubApi;
    }
    
    public ListAll(user : string, repo : string) : List[DownloadItem]
    {
      _githubApi.githubApiRequestRunner.[List[DownloadItem]]("GET", $"repos/$(user)/$(repo)/downloads")
    }

    public ListOne(user : string, repo : string, id : int) : DownloadItem
    {
      _githubApi.githubApiRequestRunner.[DownloadItem]("GET", $"repos/$(user)/$(repo)/downloads/$(id)")
    }
    
    public Create(user : string, repo : string, file : string, description : string = "", content_type : string = "text/plain") : UploadItem
    {
      def fileInfo = FileInfo(file);
      def uploadItem = _githubApi.githubApiRequestRunner.[UploadItem]("POST", $"repos/$(user)/$(repo)/downloads", GitHubUploadItem() <- 
      {
        name = fileInfo.Name;
        size = fileInfo.Length;
        description = description;
        content_type = content_type;
      });
      
      _githubApi.s3UploadRequestRunner(
        s3Url                 = uploadItem.s3_url,
        key                   = uploadItem.path,
        acl                   = uploadItem.acl,
        successActionStatus   = 201,
        filename              = uploadItem.name,
        awsAccessKeyId        = uploadItem.accesskeyid,
        policy                = uploadItem.policy,
        signature             = uploadItem.signature,
        contentType           = uploadItem.mime_type,
        file                  = file
      );
      
      uploadItem
    }
    
    public Delete(user : string, repo : string, id : int) : void
    {
      _ = _githubApi.githubApiRequestRunner.[object]("DELETE", $"repos/$(user)/$(repo)/downloads/$(id)")
    }
  }
}
