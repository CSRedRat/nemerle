<?xml version="1.0" encoding="utf-8" ?>
<project name="ItemTemplates" default="build" xmlns="http://nant.sf.net/release/0.85-rc3/nant.xsd">
  <description>
    Copyright (c) 2003-2007 The University of Wroclaw.
    All rights reserved.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met:
       1. Redistributions of source code must retain the above copyright
          notice, this list of conditions and the following disclaimer.
       2. Redistributions in binary form must reproduce the above copyright
          notice, this list of conditions and the following disclaimer in the
          documentation and/or other materials provided with the distribution.
       3. The name of the University may not be used to endorse or promote
          products derived from this software without specific prior
          written permission.

    THIS SOFTWARE IS PROVIDED BY THE UNIVERSITY ``AS IS'' AND ANY EXPRESS OR
    IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
    OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
    NO EVENT SHALL THE UNIVERSITY BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
    TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
    LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    
    You must not remove this notice, or any other, from this software.

    dist.build - Builds Nemerle package source.
  </description>

  <property name="dir.top" value="${path::get-full-path('../../../')}" overwrite="false" />
  <property name="nemerle.include" value="${path::combine(dir.top, 'Nemerle.include')}" overwrite="false" />

  <fail message="Please run `nant configure' in the ${dir.top} folder first." if="${not file::exists(nemerle.include)}"/>
  <include buildfile="${nemerle.include}" failonerror="true" />
  <property name="dir.vs-plugin" value="${path::combine(dir.top, 'VsIntegration')}" overwrite="false" />

  
  <!-- Real begin -->

  <target name="build"           description="Build dist" depends="build.bin build.docs build.vs-plugin build.vs-shell"/>
  
  <target name="build.bin"       description="Build binaries">
    <copy todir="dist/bin" flatten="true">
      <fileset basedir="${dir.top}">
        <include name="${path::combine('bin', configuration)}/*" />
        <include name="tools/msbuild-task/Nemerle.MSBuild.targets" />
        <include name="${path::combine('tools/bin', configuration)}/*" />
      </fileset>
    </copy>
    <copy todir="dist/bin" flatten="true">
      <fileset basedir="${dir.top}/Linq/Macro">
        <include name="${path::combine('bin', configuration)}/*" />
      </fileset>
    </copy>
  </target>

  <target name="build.docs"      description="Build documentation">
    <mkdir dir="dist/docs" />
    <exec program="wget" workingdir="dist/docs" verbose="true">
      <arg value="--timestamping" />
      <arg value="-c" />
      <arg value="http://nemerle.org/static/Grokking_Nemerle.html" />
      <arg value="http://nemerle.org/static/Macros.html" />
      <arg value="http://nemerle.org/static/Tutorials_and_examples.html" />
    </exec>
  </target>            

  <target name="build.vs-plugin" description="Build Visual Studio integration">
    <!-- CodeSnippets -->
    <copy todir="dist/vs-plugin/CodeSnippets">
      <fileset basedir="${path::combine(dir.vs-plugin, 'Nemerle.VisualStudio/CodeSnippets')}">
        <include name="**/*" />
      </fileset>
    </copy>

    <!-- Templates -->
    <mkdir dir="dist/vs-plugin/ItemTemplates" />
    <foreach item="Folder" in="${path::combine(dir.vs-plugin, 'Nemerle.VisualStudio/Templates/ProjectItems')}" property="foldername">
      <zip zipfile="dist/vs-plugin/ItemTemplates/${path::get-file-name(foldername)}.zip" unless="${path::get-file-name(foldername) == '.svn'}">
        <fileset basedir="${foldername}">
          <include name="**/*" />
        </fileset>
      </zip>
    </foreach>
    <foreach item="Folder" in="${path::combine(dir.vs-plugin, 'Nemerle.VisualStudio/Templates/ProjectItems/WPF')}" property="foldername">
      <zip zipfile="dist/vs-plugin/ItemTemplates/${path::get-file-name(foldername)}.zip" unless="${path::get-file-name(foldername) == '.svn'}">
        <fileset basedir="${foldername}">
          <include name="**/*" />
        </fileset>
      </zip>
    </foreach>
    <mkdir dir="dist/vs-plugin/ProjectTemplates" />
    <foreach item="Folder" in="${path::combine(dir.vs-plugin, 'Nemerle.VisualStudio/Templates/Projects')}" property="foldername">
      <zip zipfile="dist/vs-plugin/ProjectTemplates/${path::get-file-name(foldername)}.zip" unless="${path::get-file-name(foldername) == '.svn'}">
        <fileset basedir="${foldername}">
          <include name="**/*" />
        </fileset>
      </zip>
    </foreach>
    <foreach item="Folder" in="${path::combine(dir.vs-plugin, 'Nemerle.VisualStudio/Templates/Projects/WPF')}" property="foldername">
      <zip zipfile="dist/vs-plugin/ProjectTemplates/${path::get-file-name(foldername)}.zip" unless="${path::get-file-name(foldername) == '.svn'}">
        <fileset basedir="${foldername}">
          <include name="**/*" />
        </fileset>
      </zip>
    </foreach>

    <!-- Binaries -->
    <copy todir="dist/bin">
      <fileset basedir="${path::combine(dir.vs-plugin, path::combine('bin', configuration))}">
        <include name="Nemerle.Compiler.Utils.*" />
        <include name="Nemerle.VisualStudio.*" />
        <include name="ComInteropHelper.*" />
      </fileset>
    </copy>
  </target>

  <!-- NemerleStudio -->
  <target name="build.vs-shell" description="Build Nemerle Studio">
    <copy todir="dist/vs-shell">
      <fileset basedir="${path::combine(dir.vs-plugin, path::combine('Shell', configuration))}">
        <include name="NemerleStudio.*" />
        <include name="PackagesToLoad/NemerleStudio.pkgdef" />
        <include name="PackagesToLoad/NemerleStudio.pkgundef" />
	    <!-- Menu -->
        <include name="PackagesToLoad/1033/NemerleStudioUI.dll" />
      </fileset>
    </copy>

  </target>
</project>
