// REFERENCE: Nemerle.Compiler

using Nemerle;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;


namespace DefineVariantoptionsMacroLibrary
{
  [MacroUsage(MacroPhase.BeforeInheritance, MacroTargets.Class)]
  macro DefineVariantoption_on_BeforeInheritance(typeBuilder : TypeBuilder, optionName : PExpr)
  {
    def variantOptionBuilder = typeBuilder.DefineNestedType(
    <[ variant_option: | $(optionName.ToString() : usesite) { public override ToString() : string { "defined on BeforeInheritance" } } ]>);

    variantOptionBuilder.Compile();
  }

  [MacroUsage(MacroPhase.BeforeTypedMembers, MacroTargets.Class)]
  macro DefineVariantoption_on_BeforeTypedMembers(typeBuilder : TypeBuilder, optionName : PExpr)
  {
    def variantOptionBuilder = typeBuilder.DefineNestedType(
    <[ variant_option: | $(optionName.ToString() : usesite) { public override ToString() : string { "defined on BeforeTypedMembers" } } ]>);

    variantOptionBuilder.Compile();
  }

  [MacroUsage(MacroPhase.WithTypedMembers, MacroTargets.Class)]
  macro DefineVariantoption_on_WithTypedMembers(typeBuilder : TypeBuilder, optionName : PExpr)
  {
    def variantOptionBuilder = typeBuilder.DefineNestedType(
    <[ variant_option: | $(optionName.ToString() : usesite) { public override ToString() : string { "defined on WithTypedMembers" } } ]>);

    variantOptionBuilder.Compile();
  }
}
