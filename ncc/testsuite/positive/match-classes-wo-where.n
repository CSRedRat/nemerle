
using System.Console;

  [Record]
  class Test
  {
    public field : Test2;
    public field2 : string;

  }

  [Record]
  class Test2
  {
    public field2 : int;
  }

  module Program
  {

    Main() : void
    {
      def check(mess, cond)
      {
        def str = if (cond()) "ok" else "fail";
        WriteLine($"$mess $str");
      }

      def test1(x)
      {
        | Test where (Test2(f), f2) => check("Testing old syntax", () => f == 3 && f2 == "test")
      }

      def test2(x)
      {
        | Test(Test2(f), f2)     => check("Testing constructor pattern", () => f == 3 && f2 == "test")
      }

      def test3(x)
      {
        | Test(field2 = f2)      => check("Testing record pattern", () => f2 == "test")
      }

      def test4(x)
      {
        | Test(field = f)        => check("Testing record pattern 2", () => f.field2 == 3)
      }

      def test5(x, mess)
      {
        match (x)
        {
          | Test(field = Test2(3)) => WriteLine($"$mess ok")
          | _                      => WriteLine($"$mess fail")
        }
      }

      def test6(x)
      {
        | Test(field = Test2(f)) => check("Testing record pattern 3", () => f == 3)
      }

      def test7(x)
      {
        | Test(field = Test2(field2 = f)) => check("Testing record pattern 4", () => f == 3)
      }

      def test8(x, mess)
      {
        match (x)
        {
          | Test(Test2(3), "test") => WriteLine($"$mess ok")
          | _                      => WriteLine($"$mess fail")
        }
      }
      
      def test = Test(Test2(3), "test");
      
      test1(test);
      test2(test);
      test3(test);
      test4(test);
      test5(test, "Testing record pattern constants");
      test6(test);
      test7(test);
      test8(test, "Testing constructor pattern constants");
    }
  }

/*
BEGIN-OUTPUT
Testing old syntax ok
Testing constructor pattern ok
Testing record pattern ok
Testing record pattern 2 ok
Testing record pattern constants ok
Testing record pattern 3 ok
Testing record pattern 4 ok
Testing constructor pattern constants ok
END-OUTPUT
*/
