using Nemerle;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using Nemerle.Test.Framework;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nemerle.Compiler.Test
{
  internal sealed class NccTestResultTrackingOutputWriter : NccTestOutputWriter
  {
    public this([NotNull] outerWriter : NccTestOutputWriter)
    {
      _outerWriter = outerWriter;
    }

    public HasErrors : bool { get { _errorBuffer.Count > 0 } }

    public override Write(messageType : NccTestMessageType, message : string) : void
    {
      match (messageType)
      {
        | Error => _errorBuffer.Add(message);
        | _ => ()
      }
      _outerWriter.Write(messageType, message);
    }

    public override WriteLine(messageType : NccTestMessageType, message : string) : void
    {
      match (messageType)
      {
        | Error => _errorBuffer.Add(message);
        | _ => ()
      }
      _outerWriter.WriteLine(messageType, message);
    }

    public GetTestResult() : Result
    {
      if (_errorBuffer.Count > 0)
        Result.Fail(_errorBuffer.Last(), NList.ToList(_errorBuffer.Take(_errorBuffer.Count - 1)))
      else
        Result.Success("passed")
    }

    public Reset() : void
    {
      _errorBuffer.Clear();
    }

    private _outerWriter : NccTestOutputWriter;
    private _errorBuffer : List[string] = List();
  }
}
