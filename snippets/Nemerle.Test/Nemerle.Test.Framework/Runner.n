using Nemerle;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Diagnostics;
using System.Collections.Generic;
using System.Linq;

namespace Nemerle.Test.Framework
{
  public sealed class Runner
  {
    public this([NotNull] executionListener : ExecutionListener)
    {
      _executionListener = executionListener;
    }

    public Run(tests : IEnumerable[Test]) : void
    {
      def timer = Stopwatch();
      _executionListener.Start();
      foreach(test in tests)
      {
        _executionListener.TestStart(test);
        def result =
          try     { timer.Start(); test.Run() }
          catch   { | ex => Result.Exception(ex) }
          finally { timer.Stop() };
        _executionListener.TestComplete(test, result, Statistics(timer.Elapsed, timer.ElapsedMilliseconds, timer.ElapsedTicks));
      }
      _executionListener.Complete();
    }

    private _executionListener : ExecutionListener;
  }
}
